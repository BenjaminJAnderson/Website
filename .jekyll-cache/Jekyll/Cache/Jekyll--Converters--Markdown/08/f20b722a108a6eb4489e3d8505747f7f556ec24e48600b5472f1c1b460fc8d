I"¢<h1 id="the-making-of-engiebenjicom">The Making of EngieBenji.com</h1>

<p>Creating my personal blog, <a href="https://engiebenji.com/">EngieBenji.com</a>, has been an exciting journey. Hereâ€™s a behind-the-scenes look at how I built the site using Jekyll and GitHub Pages.</p>

<h2 id="why-jekyll">Why Jekyll?</h2>

<p>I chose Jekyll for its simplicity and efficiency. As a static site generator, it allows me to create fast, secure, and easily maintainable websites. Itâ€™s perfect for blogs and personal projects because it converts plain text into static websites and blogs. Plus, it integrates seamlessly with GitHub Pages.</p>

<h2 id="setting-up-with-github-pages">Setting Up with GitHub Pages</h2>

<p>GitHub Pages is a free service provided by GitHub that allows you to host your website directly from a GitHub repository. Hereâ€™s a brief overview of the steps I took:</p>

<ol>
  <li>
    <p><strong>Creating the Repository</strong>: I started by creating a new repository on GitHub named <code class="language-plaintext highlighter-rouge">engiebenji.github.io</code>. This naming convention is important as GitHub Pages uses it to serve the site.</p>
  </li>
  <li>
    <p><strong>Installing Jekyll</strong>: On my local machine, I installed Jekyll by following the official <a href="https://jekyllrb.com/docs/installation/">Jekyll installation guide</a>. Once installed, I used the <code class="language-plaintext highlighter-rouge">jekyll new</code> command to create a new Jekyll site.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> gem <span class="nb">install </span>bundler jekyll
 jekyll new engiebenji
 <span class="nb">cd </span>engiebenji
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Customizing the Site</strong>: I customized the default template by editing the <code class="language-plaintext highlighter-rouge">_config.yml</code> file and creating my own layouts, includes, and posts. I focused on creating a clean, professional design that reflects my personal brand and showcases my engineering projects and ideas.</p>
  </li>
  <li>
    <p><strong>Pushing to GitHub</strong>: After making my changes, I pushed the local Jekyll site to the GitHub repository.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> git init
 git add <span class="nb">.</span>
 git commit <span class="nt">-m</span> <span class="s2">"Initial commit"</span>
 git remote add origin https://github.com/engiebenji/engiebenji.github.io.git
 git push <span class="nt">-u</span> origin main
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Enabling GitHub Pages</strong>: In the repository settings on GitHub, I enabled GitHub Pages and selected the <code class="language-plaintext highlighter-rouge">main</code> branch as the source. GitHub automatically built and deployed the site.</p>
  </li>
</ol>

<h2 id="benefits-of-github-pages-over-website-generators">Benefits of GitHub Pages over Website Generators</h2>

<p>While services like Squarespace and Wix offer user-friendly interfaces and customization options, GitHub Pages paired with Jekyll provides several distinct advantages:</p>

<ol>
  <li>
    <p><strong>Cost</strong>: GitHub Pages is completely free, making it an excellent choice for personal projects and blogs without any hosting fees.</p>
  </li>
  <li>
    <p><strong>Version Control</strong>: With GitHubâ€™s version control system, every change made to the site is tracked. This makes it easy to roll back changes, collaborate with others, and maintain a history of your siteâ€™s development.</p>
  </li>
  <li>
    <p><strong>Performance</strong>: GitHub Pages delivers static sites, which are faster to load compared to dynamically generated pages from platforms like Squarespace and Wix. This improves user experience and SEO.</p>
  </li>
  <li>
    <p><strong>Flexibility</strong>: Jekyll allows for extensive customization and does not limit you to predefined templates and structures. You have full control over your siteâ€™s design and functionality.</p>
  </li>
  <li>
    <p><strong>Learning Opportunity</strong>: Building a site with Jekyll and GitHub Pages is a great way to improve your web development skills, offering a hands-on experience with HTML, CSS, and Markdown.</p>
  </li>
</ol>

<h2 id="theming-with-jekyll">Theming with Jekyll</h2>

<p>One of the great aspects of Jekyll is the ability to use themes, which provide a base design that you can customize to fit your needs. Hereâ€™s how you can use and customize a Jekyll theme:</p>

<ol>
  <li>
    <p><strong>Choosing a Theme</strong>: Browse the <a href="https://jekyllthemes.io/">Jekyll Themes</a> site to find a theme that fits your style. Popular themes are also available on GitHub.</p>
  </li>
  <li>
    <p><strong>Installing the Theme</strong>: Once youâ€™ve chosen a theme, follow the installation instructions provided by the themeâ€™s documentation. Typically, you can install a theme by adding it to your <code class="language-plaintext highlighter-rouge">Gemfile</code> and updating the <code class="language-plaintext highlighter-rouge">_config.yml</code> file.</p>

    <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="c1"># Gemfile</span>
 <span class="n">gem</span> <span class="s2">"jekyll-theme-name"</span>
</code></pre></div>    </div>

    <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="c1"># _config.yml</span>
 <span class="na">theme</span><span class="pi">:</span> <span class="s">jekyll-theme-name</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Customizing the Theme</strong>: After installing the theme, you can customize it by overriding the default files. Create corresponding files in your projectâ€™s directory to override the themeâ€™s layouts, includes, and styles.</p>

    <p>For example, to customize the themeâ€™s main layout, copy the layout file from the themeâ€™s repository to your <code class="language-plaintext highlighter-rouge">_layouts</code> directory and edit it to suit your taste.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">cp</span> <span class="si">$(</span>bundle show jekyll-theme-name<span class="si">)</span>/_layouts/default.html _layouts/
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Editing Styles</strong>: Modify the CSS or SCSS files to change the look and feel of your site. Place your custom styles in the <code class="language-plaintext highlighter-rouge">assets</code> directory and link them in your layouts.</p>
  </li>
  <li>
    <p><strong>Content Updates</strong>: Continue to add your content in the <code class="language-plaintext highlighter-rouge">_posts</code> directory, and push the changes to GitHub. Jekyll will regenerate your site with the customized theme.</p>
  </li>
</ol>

<h2 id="maintaining-the-blog">Maintaining the Blog</h2>

<p>Maintaining the blog is straightforward. I write my posts in Markdown, place them in the <code class="language-plaintext highlighter-rouge">_posts</code> directory, and push the changes to GitHub. Jekyll and GitHub Pages handle the rest, regenerating the site and publishing the new content seamlessly.</p>

<h2 id="conclusion">Conclusion</h2>

<p>Using Jekyll and GitHub Pages has made creating and maintaining EngieBenji.com an enjoyable experience. Itâ€™s a powerful combination that provides a lot of flexibility without the overhead of managing a server or dealing with complex configurations.</p>

<h2 id="i-hope-you-enjoyed-this-peek-into-the-making-of-my-website-">I hope you enjoyed this peek into the making of my website :)</h2>

:ET