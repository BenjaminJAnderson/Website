I"è$<h2 id="introduction">Introduction</h2>

<p>In this post, Iâ€™ll be sharing the journey of building my custom ortholinear keyboard. From initial design to final assembly, I will walk you through each step of the process.</p>

<p>I wanted to do something different by incorporating <strong>analog switches</strong> for the <strong>WASD and arrow keys</strong>. This allows for more precise control, making the keyboard ideal for gaming and other applications requiring nuanced input. Additionally, Iâ€™ve included <strong>quarter-size switches</strong> that fit four buttons into a single key cap. These coloUr-coordinated buttons act as another version of the shift key, allowing for many more characters to be incorporated into a single keyboard. This innovative approach significantly expands the functionality and versatility of the keyboard, whilst giving a custom flare that separates it from off the shelf, hence the name UNORTHODOX.</p>

<h2 id="why-ortholinear">Why Ortholinear?</h2>

<p>The decision to build an ortholinear keyboard stems from both aesthetic and functional considerations. Ortholinear keyboards feature a grid-like layout where keys are aligned in straight columns and rows, creating a clean and simple look. This simplicity in design not only makes the keyboard visually appealing but also streamlines the process of arranging the circuit board.</p>

<h3 id="simplicity-and-efficiency">Simplicity and Efficiency</h3>

<p>The uniform arrangement of keys in an ortholinear keyboard simplifies the design and manufacturing process. With keys neatly aligned in a grid, designing the PCB (printed circuit board) becomes more straightforward, as the traces and connections can follow a logical and organized pattern. This can reduce the complexity of the circuit design and potentially lower production costs. Moreover, the consistent alignment of keys can improve typing accuracy and speed for some users, as fingers move in a more natural, linear fashion.</p>

<h3 id="historical-context">Historical Context</h3>

<p>To understand the appeal of the ortholinear layout, itâ€™s useful to look back at the history of keyboard design. The staggered layout of traditional keyboards dates back to the era of mechanical typewriters. In early typewriters, the keys were arranged in a staggered pattern to prevent the levers from jamming together when typing quickly. This design was a practical solution to a mechanical problem.</p>

<h3 id="modern-relevance">Modern Relevance</h3>

<p>However, with the advent of electronic keyboards, the staggered layout no longer serves a functional purpose. Modern keyboards do not have the same mechanical constraints, and the staggered arrangement persists largely out of convention rather than necessity. As a result, the ortholinear layout presents an opportunity to reimagine keyboard design without being bound by outdated mechanical requirements.</p>

<p>In summary, the ortholinear layout offers a sleek, efficient, and historically informed alternative to the traditional staggered keyboard design. By embracing this modern approach, we can create keyboards that are not only more visually appealing but also potentially more ergonomic and easier to manufacture.</p>

<h2 id="project-overview">Project Overview</h2>

<p>In this project, I opted to use <strong>KICAD</strong> for designing the motherboard and <strong>OpenSCAD</strong> for creating custom keycaps. Both of these tools offer robust features and flexibility, making them ideal for my custom ortholinear keyboard build.</p>

<h3 id="kicad-for-motherboard-design">KICAD for Motherboard Design</h3>

<p>KICAD is a powerful, open-source electronic design automation (EDA) software suite that I chose for designing the keyboardâ€™s PCB (printed circuit board). Its comprehensive set of tools allows for intricate and precise design, making it perfect for handling the unique layout and requirements of an ortholinear keyboard.</p>

<p>Using KICAD, I was able to:</p>

<ul>
  <li><strong>Schematic Capture</strong>: Create detailed and organized schematic diagrams that represent the electrical connections between components.</li>
  <li><strong>PCB Layout</strong>: Design the physical layout of the PCB with precision, ensuring that all components are placed optimally and that the electrical traces are routed efficiently.</li>
  <li><strong>3D Visualization</strong>: Preview the design in 3D to get a better understanding of how the final product will look and to check for any potential issues with component placement or interference.</li>
  <li><strong>Gerber File Generation</strong>: Produce the necessary files for manufacturing the PCB, ensuring that everything is ready for fabrication.</li>
</ul>

<p>KICADâ€™s open-source nature and extensive community support also provided valuable resources and tutorials throughout the design process.</p>

<h3 id="openscad-for-custom-keycaps">OpenSCAD for Custom Keycaps</h3>

<p>For creating custom keycaps, I chose <strong>OpenSCAD</strong>, a script-based 3D CAD modeler. OpenSCAD is particularly well-suited for parametric design, allowing for precise control over the dimensions and features of the keycaps.</p>

<p>With OpenSCAD, I was able to:</p>

<ul>
  <li><strong>Custom Shapes</strong>: Design keycaps with specific shapes and profiles that fit the quarter-size switches, enabling the innovative 4-buttons-in-one-keycap feature.</li>
  <li><strong>Color Coordination</strong>: Easily incorporate different colors into the keycap design, aligning with the color-coordinated shift functionality.</li>
  <li><strong>Parametric Design</strong>: Adjust dimensions and features quickly by changing parameters in the script, streamlining the process of tweaking and perfecting the keycaps.</li>
  <li><strong>3D Printing</strong>: Generate STL files for 3D printing, allowing for rapid prototyping and iteration to ensure the keycaps fit perfectly and function as intended.</li>
</ul>

<p>By using OpenSCAD, I could achieve a high level of customization and precision, creating keycaps that not only meet the functional requirements of the keyboard but also enhance its aesthetic appeal.</p>

<p>Together, KICAD and OpenSCAD provided a robust and flexible foundation for designing and bringing my custom ortholinear keyboard to life. These tools enabled me to overcome the challenges of custom keyboard design and realize my vision for a unique and highly functional input device.</p>

<h2 id="design-and-development-process">Design and Development Process</h2>

<h3 id="initial-design">Initial Design</h3>

<p>Discuss your initial ideas and inspirations for the keyboard design. Include sketches, drawings, or initial concepts if available.</p>

<p><img src="path_to_your_image" alt="Initial Design Sketch" /></p>

<h3 id="pcb-design">PCB Design</h3>

<p>Detail the process of designing the PCB. Mention any software you used and the challenges you faced.</p>

<p><img src="path_to_your_image" alt="PCB Design Screenshot" /></p>

<h3 id="case-design">Case Design</h3>

<p>Describe the case design process. Include information about the materials used and any 3D printing or machining that was involved.</p>

<p><img src="path_to_your_image" alt="Case Design" /></p>

<h3 id="firmware-development">Firmware Development</h3>

<p>Explain how you developed or customized the firmware for your keyboard. Mention any specific features or functions you implemented.</p>

<h2 id="components-used">Components Used</h2>

<p>List all the components used in your keyboard build, including:</p>

<ul>
  <li><strong>Switches</strong>: Type and brand</li>
  <li><strong>Keycaps</strong>: Material, profile, and design</li>
  <li><strong>Microcontroller</strong>: Model and specifications</li>
  <li><strong>Other Components</strong>: Diodes, resistors, LEDs, etc.</li>
</ul>

<h2 id="assembly-process">Assembly Process</h2>

<h3 id="soldering">Soldering</h3>

<p>Provide a step-by-step guide on soldering the components onto the PCB. Include tips for beginners.</p>

<p><img src="path_to_your_image" alt="Soldering Process" /></p>

<h3 id="assembling-the-case">Assembling the Case</h3>

<p>Explain how you assembled the case, including any challenges you faced and how you overcame them.</p>

<p><img src="path_to_your_image" alt="Case Assembly" /></p>

<h3 id="final-assembly">Final Assembly</h3>

<p>Show the final steps of putting everything together and performing the first test.</p>

<p><img src="path_to_your_image" alt="Final Assembly" /></p>

<h2 id="challenges-faced">Challenges Faced</h2>

<p>Discuss any major challenges you encountered during the project and how you solved them.</p>

<h2 id="final-thoughts">Final Thoughts</h2>

<p>Share your overall experience and any future plans for your keyboard or other projects. Include any lessons learned and advice for others interested in building their own custom keyboards.</p>

<p><img src="path_to_your_image" alt="Finished Keyboard" /></p>

<h2 id="gallery">Gallery</h2>

<p>Include a gallery of images showcasing your finished keyboard from different angles.</p>

<p><img src="path_to_your_image" alt="Keyboard Image 1" />
<img src="path_to_your_image" alt="Keyboard Image 2" />
<img src="path_to_your_image" alt="Keyboard Image 3" /></p>

<h2 id="conclusion">Conclusion</h2>

<p>Thank your readers for following along with your project. Encourage them to leave comments or ask questions if they have any.</p>

<hr />

:ET