I"ÿ<p>During my year in industry at Huawei, it dawned on me how little practical experience I had on engineering projects. I‚Äôve always been into tech and being creative, yet I hadn‚Äôt ever taken the dive into trying to build something from scratch. I started by surrounding everything I saw online with other engineers and creators to help inspire ideas. Months went past with me silently browsing and finding new creators, when I found a post by <a href="https://gregdavill.com/blog/2020/6/13/miniature-3456x-led-cube">Greg Davill</a>. This colourful cube was exactly the sort of thing I was looking for. It was flashy and ‚Äúsimple enough‚Äù to get started. I realized early on that FPGAs were a bit too much for a first time project, so I looked into ways of working with microcontrollers. I also wanted to miniaturize what he had done, so I looked around and found other projects of a similar theme. More reading led me to find Pol Pla‚Äôs paper on <a href="https://dam-prod.media.mit.edu/x/files/sites/default/files/TEI_DisplayBlocks_CameraReady_lite.pdf">Display Blocks</a>.</p>

<blockquote>
  <p>Display Blocks are designed to be a series of handheld
devices, enabling easy manipulation. Holding a device in
their hands, users are able to easily rotate it and reveal its
different sides. Thus, creating a self-enclosed, autonomous
device was crucial to offering unencumbered exploration of
content. The final design supports not only single device
manipulation but also holding multiple devices at once. For
this purpose, the devices must be easy to manipulate using
only one hand; this way, users can compare cubes side by side, adding even more richness to the navigation of data.</p>
</blockquote>

<p>After reading this, I knew this was the project I had to work on, no matter how difficult it might be. Not only would it be a great engineering challenge, but it provided a tangible and satisfying object at the end of it.</p>

<p>¬†</p>

<h2 id="circuit-design"><strong>Circuit Design</strong></h2>
<p>I decided the easiest way to house the electronics for this project was to build 6 PCBs. PCB 1 acts as the motherboard ‚Äì holding the main circuitry, with PCBs 2-6 acting as daughter boards simply containing the basic passive components and connectors to attach to displays. All of these boards are daisy-chained together using <strong>F</strong>lat <strong>F</strong>lex <strong>C</strong>ables <strong>(FFC)</strong>. These cables act as the bus providing the necessary power and SPI signals to the boards.</p>

<h4 id="motherboard-pcb-1"><strong>Motherboard (PCB 1)</strong></h4>
<p>There are 3 main ICs present on the motherboard.
¬†</p>

<p><strong>SSD1351</strong><br />
This is the IC used by every display in this design, it allows for SPI control of a 128√ó128 RGB OLED display. Unfortunately there isn‚Äôt a massive market for square OLED displays, so it‚Äôs hard to find ones that are small and high resolution. As a result the best display I could find has rather large bezels, hopefully with the growth of the VR market, small OLED screens might become a cheap as phone screens are today. 
<img src="/images/display.webp" alt="Display" /></p>

<p><strong>ICM20602</strong><br />
The ICM20602 is an <strong>I</strong>nertial <strong>M</strong>easurement <strong>U</strong>nit <strong>(IMU)</strong>, housing an accelerometer and gyroscope. IMUs open up the possibility of using simple gestures to control the device, for example shaking the device can be used to wake the device from sleep or tilting the device to control the movement of a cursor. I chose this chip for its small size and SPI port, meaning only one more chip select line needs to be added to the SPI bus used by the displays.</p>

<p><strong>ESP32-S2-Mini-1U</strong><br />
Finally, the star of the show. The ESP32 is an amazing chip for its size, the benefit of using the newer/slightly slower chip is its simplicity. The ESP32-S2 has its own native USB interface, this means I don‚Äôt have to add a CP2102 and a bunch of other circuity to my design. Fewer parts, fewer problems.</p>

<p><img src="/images/motherboard.webp" alt="Motherboard" />
<img src="/images/pcb.webp" alt="PCB" />
¬†</p>
<h4 id="daughterboards-pcb-2-6"><strong>Daughterboards (PCB 2-6)</strong></h4>
<p>The other 5 PCBs have almost identical schematics, providing the passive components and connectors for the displays. These displays will all be daisy-chained together with the motherboard to provide a 6 display device.
¬†</p>

<h2 id="frame-design">Frame Design</h2>
<p>I initially designed the frame in unison with the PCB, ensuring that there was enough space for the parts as well as a way to secure the board to the frame. I exeperimented with holes to center</p>

<!-- ![Inside](/images/inside_cube.webp) -->
<p><img src="/images/pcb_mouse.webp" alt="MousePCB" /></p>

<h2 id="software-design">Software Design</h2>

<h2 id="final-notes">Final Notes</h2>
<p><a href="https://github.com/BenjaminJAnderson/CUBE">Github Repository</a></p>

<p>Details were sparse as to the actual circuitry and design of the 3D printed enclosure, so I assembled a rough BOM for the project using readily available hardware.</p>

<ol>
  <li>4DOLED-282815 (128x128 RGB OLED Display)</li>
  <li>ICM20602 (Inertial Measurement Unit)</li>
  <li>ESP32-S2-Mini-1U (Microcontroller)</li>
  <li>Battery</li>
</ol>

<p>The hardest part about the project was using Fusion360 and KiCAD in tandem with eachother. As the component placement, PCB and 3D Printed housing were all linked together
<img src="/images/about.webp" alt="First Design" /></p>
:ET